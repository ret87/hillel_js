'use strict';
console.log('Objects');

        // Объекты

    // - Объекты - это некоторая сущность, которая обладает блиц структурой (ключ - значение в данном случае);
// - Очень похожи на массивы (по типам данных они даже равны), у обоих есть клю - значения (индекс - значение в случае массива), 
// разница лишь в том, что у массива эти ключи - индексы, очень строго пронумерованны.
// - В JS практически всё может быть представленно в виде объектов.
// - Объявление объекта:  obj = { ключ: значение, ключ: значение, ключ: значение.  }

    // - Обращение к объекту: что бы обратиться к свойствам объекта - к значению ключа, в [] скобках пишем имя ключа,  значение 
// которого выводим. Обращаемся к имени ключа как к строке если он строка, и к цифре если цифра. obg['ключ'] / obj[ключ].
// - Можно обратиться через переменную, предварительно прировняв её к имени ключа, искомого значения var key = 'ключ' ==> obj[key]
// - Можно обратиться через точку obj.ключ
// - Ключа, которого нет в значениях - undefined
    
    // Вложенные объекты 
// - Вложенный объект в объект,задаём как обычный ключ, только в значении вложенного объекта ставим objIn: {кл: зн; кл: [зн, зн1, зн2]}
// - Обращенеи ко вложенному объекту как ключу через главный объект obj.objIn
// - Обращение к ключам вложенного объекта, так же через точку, через главный объект obj2.objIn.ключ
// - Если в значениях ключей есть массив, то перебор можно осуществить обратившись через obj2.objIn.ключ-массива.length
// - Структура перед точко " .  " - является объектом
// - Добавление ключа и его свойства, через обращение к объекту  obj.newkey = "значение";
// - Так же можно и удалить  delete obj.key;

    // Методы
// - Функция внутри объекта, не может быть объявлена до момента её инициализации - т.е. FuncDecl obj = {keyFunc = function(param){} }
// - Обращение к такой функции, только через объект и ключ значение obj.keyFunc
// - задать значение можно с помощью скобок вкоцне- как и в обычной функции  obj.keyFunc(fact param) 



    // - Объявление объекта  
var obj = {
    name: 'Artur',
    age: 18,
    25: 5.
}
console.log(obj);

    // Обращение к объекту
// - Что бы обратиться к свойствам объекта - к значению ключа, в [] скобках пишем имя ключа, 
// значение которого мы хотим вывести. Обращаемся к имени ключа как к строке если он строка, и к цифре если цифра. obg[''] / obj[]
console.log(obj['name']);
console.log(obj[25]);
var keyName = 'name';
// - Можно обратиться через переменную, предварительно прировняв её к имени ключа, искомого значения var key = 'ключ'
console.log(obj[keyName]);
// - Можно обратиться через точку obj.ключ
console.log(obj.name);
// - Ключа, которого нет в значениях - undefined
console.log('ключа не существует ' + obj.names);


    // Вложенные объекты
// Вложенный объект в объект, задаём как обычный ключ, только в значении вложенного объекта ставим objIn: {кл: зн; кл: [зн, зн1, зн2]}
var obj2 = {
    name: 'Artem',
    age: 31,
    adress: {
        city: 'Kiev',
        street: 'Kopernika',
        postalCode: '04111',
        siblings: [1, 2, 3, 4]
    }
}
console.log(obj2);
// Обращенеи ко вложенному объекту как ключу через главный объект obj.objIn
console.log(obj2.adress);
// Обращение к ключам вложенного объекта, так же через точку, через главный объект obj2.objIn.ключ
console.log(obj2.adress.city);
// Если в значениях ключей есть массив, то перебор можно осуществить обратившись через obj2.objIn.ключ-массива.length
for(var i=0; i<obj2.adress.siblings.length; i++){
    console.log(obj2.adress.siblings[i]);
}
// Добавление ключа и его свойства, через обращение к объекту  obj.newkey = "значение";
obj.nickname = "Charli";
console.log(obj);
// Так же можно и удалить  delete obj.key;
delete obj.nickname;
console.log(obj);


    // Методы
// Функция внутри объекта, не может быть объявлена до момента её инициализации - т.е. FuncDecl obj = {keyFunc = function(param){} }
var data = {
    sum: function(a, b){
        return a + b;
    }
}
// Обращение к такой функции, только через объект и ключ значение obj.keyFunc  obj.keyFunc(fact param) 
console.log(data.sum);
// задать значение можно с помощью скобок вкоцне- как и в обычной функции  obj.keyFunc(fact param) 
console.log(data.sum(2, 2));


    // Перебор объекта
// - Свойства length - в объектах нет. 
// - Для перебора объекта существует  for (имя переменной in obj){} 
for(var key in obj){    
    console.log(key);
}
        for(i=0; i<key.length;i++){
            
            console.log("perebor " + key[i]);
        }