'use strict';
console.log('Lection BOM DOM L13');


console.log('DOM L13');
// Низкоуровневые языки - языки наименее интуитивно понятные человеку, с конкретными параметрами.
// Высокоуровневые языки - декларативные, адаптированные под работу с человеком языки, очень вариативны с параметрами.

// TAG - это сами тэги-их название, их атрибутика и содержимое (пошло из XML); один из видов узлов;
// Все тэги это объекты. По логике DOM тэги - это элементы (elements)
// Интерфейс - это место (точка) сопрекосновения двух систем;
// DOM - объектная модель-документ, по сути это интерфейс между html и js;
// Shadow DOM -объектная модель-документа, которая существует параллельно с разработкой, использованием контента;

// document - объект, который является отображением всего дерева.
// Дерево тэгов - иерархия, которая обладает узлами (тэгами) внутри которых может быть содержимое; 

// Виды узлов (nod type):
//  - document; - самая внешняя noda
//  - тэги; 
//  - текст;
//  - коментарий;

    // document
// document - как переменная является отображением дерева и лежит внутри объекта window;
// document - все манипуляции и обращения, работают из js в html, с помощью методов (getElementById());
// Если мы ввидим отсылку на Element - нам по любому нужно будет добавлять какое-то имя, т.к. мы обращаемся к елементу по чём-то;
// getElementById(); -возвращает ссылку на элемент по ID (который заранее установлен в html определённом элементу);
// console.log(document.getElementById('block'));

// window.onload = function(){} - когда загрузится окно, запускается функция (все теги, все скрипты, все стили, но не все картинки);
// с помощью window.onload = function(){} - мы можем скрипты запускать из head, а не из тела html
window.onload = function(){
    // console.log(document.getElementById('block'));
    console.dir(document.getElementById('block'));
};
// Все атрибуты которые могут быть применимы к тэгу - прописаны в свойствах его объекта (console.dir и выбрать нужный елемент) 
