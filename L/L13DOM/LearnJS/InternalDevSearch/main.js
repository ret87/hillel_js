'use strict';
console.log('BOM DOM L13');


console.log('Internal Device Search methods DOM L13');

        // // Внутреннее устройство поисковых методов
// Несмотря на схожесть в синтаксисе, поисковые методы get* и querySelector* внутри устроены очень по-разному.


        // document.getElementById(id)
// Браузер поддерживает у себя внутреннее соответствие id -> элемент. Поэтому нужный элемент возвращается сразу. 


        // elem.querySelector(query), elem.querySelectorAll(query)
// Браузер перебирает все подэлементы внутри элемента elem(или по всему документу, если вызов в контексте документа) 
// и проверяет каждый элемент на соответствие запросу query.

// Вызов querySelector прекращает перебор после первого же найденного элемента, 
// а querySelectorAll собирает найденные элементы в «псевдомассив»: внутреннюю структуру данных, по сути аналогичную массиву JavaScript


        // elem.getElementsBy*(…)
// Результаты поиска getElementsBy* – живые! При изменении документа – изменяется и результат запроса.
// getElementsBy* – это не массив, а специальный объект, имеющий «живой поисковой запрос».
// console.log(document.body.getElementsByTagName('div').length);
// console.log(document.body.innerHTML = '');
// console.log(document.body.getElementsByTagName('div').length);


        // Алгоритмы getElementsBy*
// Чтобы производительность getElementsBy* была достаточно хорошей, активно используется кеширование результатов поиска.

    // Способ Firefox
// - Перебрать подэлементы document.body в порядке их появления в поддереве. 
// - Запоминать все найденные элементы во внутренней структуре данных, чтобы при повторном обращении обойтись без поиска.

    // Способ WebKit
// - Перебирать подэлементы document.body. Запоминать только один, последний найденный, элемент, 
// а также, по окончании перебора – длину коллекции.

// Основное различие – в том, что Firefox запоминает все найденные, а Webkit – только последний. 
// Таким «метод Firefox» требует больше памяти, но гораздо эффективнее при повторном доступе к предыдущим элементам.
// Запомненные элементы сбрасываются при изменениях DOM.




